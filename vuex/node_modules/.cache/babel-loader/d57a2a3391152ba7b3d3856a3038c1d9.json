{"remainingRequest":"/home/jyhoon94/vues/vuex/node_modules/babel-loader/lib/index.js!/home/jyhoon94/vues/vuex/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jyhoon94/vues/vuex/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jyhoon94/vues/vuex/src/components/Users/AllUsers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jyhoon94/vues/vuex/src/components/Users/AllUsers.vue","mtime":1626523948954},{"path":"/home/jyhoon94/vues/vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jyhoon94/vues/vuex/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/jyhoon94/vues/vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jyhoon94/vues/vuex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/jyhoon94/vues/vuex/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { EventBus } from '@/main.js';\nimport { mapState, mapGetters } from 'vuex'; // computed와 함께 사용.\n\nexport default {\n  data: function data() {\n    return {// vuex의 store에 저장되어 있는 allusers 데이터를 불러오기\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapState(['allUsers'])), mapGetters({\n    count: 'allUsersCount',\n    seouls: 'countOfSeoul',\n    percent: 'percentOfSeoul'\n  })), mapGetters(['allUsersCount', 'countOfSeoul', 'percentOfSeoul'])),\n  // 정보 받기.\n  mounted: function mounted() {\n    var _this = this;\n\n    EventBuson('si.$gnUp', function (users) {\n      // Signup에서 emit한 정보를 받음.\n      _this.$store.state.allUsers.push(users);\n    });\n  }\n};",{"version":3,"sources":["AllUsers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,SAAA,QAAA,QAAA,WAAA;AACA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA,C,CAAA;;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA,CAEA;AAFA,KAAA;AAIA,GANA;AAQA,EAAA,QAAA,gDAEA,QAAA,CAAA,CAAA,UAAA,CAAA,CAFA,GAIA,UAAA,CAAA;AACA,IAAA,KAAA,EAAA,eADA;AAEA,IAAA,MAAA,EAAA,cAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GAAA,CAJA,GAUA,UAAA,CAAA,CAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,CAAA,CAVA,CARA;AAqBA;AACA,EAAA,OAtBA,qBAsBA;AAAA;;AACA,IAAA,UAAA,CAAA,UAAA,EAAA,UAAA,KAAA,EAAA;AAAA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,KAFA,CAAA;AAGA;AA1BA,CAAA","sourcesContent":["<template>\n  <div>\n  <!-- store.js의 값들을 붙임-->\n    <h1>All Users({{$store.getters.allUsersCount}})</h1>\n    <h3>Count of Seoul Users: {{$store.getters.countOfSeoul}}명</h3>\n    <h3>Percentage of Seoul Users: {{$store.getters.percentOfSeoul}}%</h3>\n\n    <h2>Map getters로 불러오기</h2>\n    <h1>All Users({{allUsersCount}})</h1>\n    <h3>Count of Seoul Users: {{ countOfSeoul}}명</h3>\n    <h3>Percentage of Seoul Users: {{percentOfSeoul}}%</h3>\n\n    <h2>Map getters로 불러오기2</h2>\n    <h1>All Users({{count}})</h1>\n    <h3>Count of Seoul Users: {{ seouls }}명</h3>\n    <h3>Percentage of Seoul Users: {{ percent }}%</h3>\n\n    <v-list two-line>\n      <v-list-tile \n        v-for=\"(user, index) in allUsers\" \n        :key=\"index\"\n        avatar\n      >\n        <v-list-tile-avatar color=\"grey lighten-3\">\n          <img :src=\"user.src\">\n        </v-list-tile-avatar>\n\n        <v-list-tile-content>\n          <v-list-tile-title v-html=\"user.name\"></v-list-tile-title>\n          <v-list-tile-sub-title>id:#{{index}} / {{user.address}} 거주</v-list-tile-sub-title>\n        </v-list-tile-content>\n      </v-list-tile>\n    </v-list>\n\n  </div>\n</template>\n\n<script>\nimport { EventBus } from '@/main.js'\nimport { mapState, mapGetters } from 'vuex' // computed와 함께 사용.\n\n  export default {\n    data() {\n      return {\n\n        // vuex의 store에 저장되어 있는 allusers 데이터를 불러오기\n      }\n    },\n\n    computed: {\n      \n      ...mapState(['allUsers']),\n      \n      ...mapGetters({\n        count : 'allUsersCount',\n        seouls : 'countOfSeoul',\n        percent: 'percentOfSeoul'\n      }),\n      \n      ...mapGetters(['allUsersCount','countOfSeoul','percentOfSeoul'])\n    },\n\n    // 정보 받기.\n    mounted() {\n      EventBuson('si.$gnUp', users => { // Signup에서 emit한 정보를 받음.\n        this.$store.state.allUsers.push(users)\n      })\n    }\n  }\n</script>\n"],"sourceRoot":"src/components/Users"}]}