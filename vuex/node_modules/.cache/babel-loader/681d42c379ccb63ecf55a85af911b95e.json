{"remainingRequest":"/home/jyhoon94/vues/vuex/node_modules/babel-loader/lib/index.js!/home/jyhoon94/vues/vuex/src/store.js","dependencies":[{"path":"/home/jyhoon94/vues/vuex/src/store.js","mtime":1626523583874},{"path":"/home/jyhoon94/vues/vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jyhoon94/vues/vuex/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex); // 저장소\n\nexport default new Vuex.Store({\n  state: {\n    // 상태: vue 인스턴스의 data역할을 수행\n    allUsers: [{\n      userId: 'hoza123',\n      password: '123',\n      name: 'Hoza',\n      address: 'Seoul',\n      src: 'https://goo.gl/oqLfJR'\n    }, {\n      userId: 'max123',\n      password: '456',\n      name: 'Max',\n      address: 'Berlin',\n      src: 'https://goo.gl/Ksk9B9'\n    }, {\n      userId: 'lego123',\n      password: '789',\n      name: 'Lego',\n      address: 'Busan',\n      src: 'https://goo.gl/x7SpCD'\n    }]\n  },\n  getters: {\n    // vue instance의 computed 역할\n    // 불러와서 쓸 값을 선언해줘야 함(state).\n    allUsersCount: function allUsersCount(state) {\n      return state.allUsers.length;\n    },\n    countOfSeoul: function countOfSeoul(state) {\n      var count = 0;\n      state.allUsers.forEach(function (user) {\n        //user: allUsers의 값들\n        if (user.address === 'Seoul') count++;\n      });\n      return count;\n    },\n    percentOfSeoul: function percentOfSeoul(state, getters) {\n      return Math.round(getters.countOfSeoul / getters.allUsersCount * 100);\n    }\n  },\n  mutations: {\n    // state 값을 변화시키므로  state 값을 받아오자.\n    // payload: Signup.vue의 addUsers 값을 받음.\n    addUsers: function addUsers(state, payload) {\n      state.allUsers.push(payload);\n    }\n  },\n  actions: {\n    // addUsers를 commit하는 action 만들기\n    addUsers: function addUsers(_ref, payload) {\n      var commit = _ref.commit;\n      // context: commit을 간단히 써주기 위한 객체 형태\n      commit('addUsers', payload);\n    }\n  }\n});",{"version":3,"sources":["/home/jyhoon94/vues/vuex/src/store.js"],"names":["Vue","Vuex","use","Store","state","allUsers","userId","password","name","address","src","getters","allUsersCount","length","countOfSeoul","count","forEach","user","percentOfSeoul","Math","round","mutations","addUsers","payload","push","actions","commit"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR,E,CAEA;;AACA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,QAAQ,EAAC,CACP;AAACC,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE,KAA9B;AAAqCC,MAAAA,IAAI,EAAE,MAA3C;AAAmDC,MAAAA,OAAO,EAAE,OAA5D;AAAqEC,MAAAA,GAAG,EAAC;AAAzE,KADO,EAEP;AAACJ,MAAAA,MAAM,EAAE,QAAT;AAAmBC,MAAAA,QAAQ,EAAE,KAA7B;AAAoCC,MAAAA,IAAI,EAAE,KAA1C;AAAiDC,MAAAA,OAAO,EAAE,QAA1D;AAAoEC,MAAAA,GAAG,EAAC;AAAxE,KAFO,EAGP;AAACJ,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE,KAA9B;AAAqCC,MAAAA,IAAI,EAAE,MAA3C;AAAmDC,MAAAA,OAAO,EAAE,OAA5D;AAAqEC,MAAAA,GAAG,EAAC;AAAzE,KAHO;AAFJ,GADqB;AAS5BC,EAAAA,OAAO,EAAC;AAAE;AAER;AACAC,IAAAA,aAAa,EAAE,uBAACR,KAAD,EAAW;AACxB,aAAOA,KAAK,CAACC,QAAN,CAAeQ,MAAtB;AAED,KANK;AAONC,IAAAA,YAAY,EAAE,sBAAAV,KAAK,EAAI;AACrB,UAAIW,KAAK,GAAG,CAAZ;AACAX,MAAAA,KAAK,CAACC,QAAN,CAAeW,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAAE;AAC/B,YAAGA,IAAI,CAACR,OAAL,KAAiB,OAApB,EAA6BM,KAAK;AACnC,OAFD;AAGA,aAAOA,KAAP;AACD,KAbK;AAcNG,IAAAA,cAAc,EAAE,wBAACd,KAAD,EAAQO,OAAR,EAAoB;AAClC,aAAOQ,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACG,YAAR,GAAuBH,OAAO,CAACC,aAA/B,GAA+C,GAA1D,CAAP;AACD;AAhBK,GAToB;AA2B5BS,EAAAA,SAAS,EAAE;AACT;AACA;AACAC,IAAAA,QAAQ,EAAE,kBAAClB,KAAD,EAAQmB,OAAR,EAAoB;AAC5BnB,MAAAA,KAAK,CAACC,QAAN,CAAemB,IAAf,CAAoBD,OAApB;AACD;AALQ,GA3BiB;AAmC5BE,EAAAA,OAAO,EAAE;AACP;AACAH,IAAAA,QAAQ,EAAE,wBAAaC,OAAb,EAAyB;AAAA,UAAtBG,MAAsB,QAAtBA,MAAsB;AACjC;AACAA,MAAAA,MAAM,CAAC,UAAD,EAAYH,OAAZ,CAAN;AACD;AALM;AAnCmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n// 저장소\nexport default new Vuex.Store({\n  state: {\n    // 상태: vue 인스턴스의 data역할을 수행\n    allUsers:[\n      {userId: 'hoza123', password: '123', name: 'Hoza', address: 'Seoul', src:'https://goo.gl/oqLfJR'},\n      {userId: 'max123', password: '456', name: 'Max', address: 'Berlin', src:'https://goo.gl/Ksk9B9'},\n      {userId: 'lego123', password: '789', name: 'Lego', address: 'Busan', src:'https://goo.gl/x7SpCD'}\n    ]\n  },\n  getters:{ // vue instance의 computed 역할\n    \n    // 불러와서 쓸 값을 선언해줘야 함(state).\n    allUsersCount: (state) => {\n      return state.allUsers.length\n\n    },\n    countOfSeoul: state => {\n      let count = 0\n      state.allUsers.forEach(user => { //user: allUsers의 값들\n        if(user.address === 'Seoul') count ++\n      })\n      return count\n    },\n    percentOfSeoul: (state, getters) => {\n      return Math.round(getters.countOfSeoul / getters.allUsersCount * 100)\n    }\n  },\n  mutations: {\n    // state 값을 변화시키므로  state 값을 받아오자.\n    // payload: Signup.vue의 addUsers 값을 받음.\n    addUsers: (state, payload) => {\n      state.allUsers.push(payload)\n    }\n  },\n  \n  actions: {\n    // addUsers를 commit하는 action 만들기\n    addUsers: ({ commit }, payload) => {\n      // context: commit을 간단히 써주기 위한 객체 형태\n      commit('addUsers',payload)\n    }\n  }\n})\n"]}]}